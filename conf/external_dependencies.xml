<external_dependencies>
    <!-- Format of a component:
    <component name="component_name"
        <installer
            distro=["UBUNTU" | "ARCH" | "*"]
            target=["package_name" | "url"]
            manager=["HG" | "SVN" | "WGET" | "APT-GET" | 
                     "APTITUDE" | "PACKER" | "PACMAN"] />
        <install_checker> SHELL_SCRIPT </install_checker>
        <execute_after> SHELL_SCRIPT </execute_after>
        <create_ext_lib_comp> PYTHON_CALL </create_ext_lib_comp>
    </component>
    IMPORTANT:
        Please maintain alphabetical order based on name to ease maintenance -->
    
    <component name="boost_thread">
        <installer
            distro="UBUNTU"
            target="libboost-thread-dev"
            manager="APT-GET" />
        <installer
            distro="ARCH"
            target="boost"
            manager="PACKER" />
        <install_checker>stat -f /usr/lib/libboost_thread.a</install_checker>
        <create_ext_lib_comp>env.CreateExternalLibraryComponent("boost_thread",[],env.Dir('/usr/lib'),[],True)</create_ext_lib_comp>
    </component>
    
    <component name="boost_system">
        <installer
            distro="UBUNTU"
            target="libboost-system-dev"
            manager="APT-GET" />
        <installer
            distro="ARCH"
            target="boost"
            manager="PACKER" />
        <install_checker>stat -f /usr/lib/libboost_system.a</install_checker>
        <create_ext_lib_comp>env.CreateExternalLibraryComponent("boost_system",[],env.Dir('/usr/lib'),[],True)</create_ext_lib_comp>
    </component>
    
    <component name="expat">
        <installer
            distro="UBUNTU"
            target="libexpat-dev"
            manager="APT-GET" />
        <install_checker> </install_checker>
        <create_ext_lib_comp>env.CreateExternalLibraryComponent("expat",[],env.Dir('/usr/lib'),[],True)</create_ext_lib_comp>
    </component>
    
    <component name="gmock">
        <installer
            distro="*"
            target="https://googlemock.googlecode.com/svn/tags/release-1.6.0"
            manager="SVN" />
        <install_checker>stat -f {WS_DIR}/gmock/SConscript</install_checker>
        <execute_after>
            cp #/site_scons/external/gmockSConscript {WS_DIR}/gmock/SConscript
        </execute_after>
    </component>
    
    <component name="gtest">
        <installer
            distro="*"
            target="https://googletest.googlecode.com/svn/tags/release-1.6.0"
            manager="SVN" />
        <install_checker>stat -f {WS_DIR}/gtest/SConscript</install_checker>
        <execute_after>
            cp #/site_scons/external/gtestSConscript {WS_DIR}/gtest/SConscript
        </execute_after>
    </component>
    
    <component name="odeint">
        <installer
            distro="*"
            target="http://github.com/headmyshoulder/odeint-v2/tarball/master"
            manager="WGET" />
        <install_checker>stat -f #/projects/odeint/SConscript</install_checker>
        <execute_after>
            mkdir #/odeint
            tar zxvf #/projects/odeint/master -C #/odeint
            rm -r #/projects/odeint
            mv #/odeint/headmyshoulder-odeint-v2-* #/projects/odeint
            rmdir #/odeint
            cp #/site_scons/external/odeintSConscript #/projects/odeint/SConscript
        </execute_after>
    </component>
    
    <component name="xdrfile">
        <installer
            distro="*"
            target="ftp://ftp.gromacs.org/pub/contrib/xdrfile-1.1.tar.gz/"
            manager="WGET" />
        <install_checker>stat -f #/projects/xdrfile/SConscript</install_checker>
        <execute_after>
            mkdir #/xdrfile2
            tar zxvf {WS_DIR}/xdrfile/xdrfile-1.1.tar.gz -C #/xdrfile2
            rm -r {WS_DIR}/xdrfile
            mv #/xdrfile2/xdrfile-1.1b {WS_DIR}/xdrfile
            rmdir xdrfile2
            cp #/site_scons/external/xdrfileSConscript {WS_DIR}/xdrfile/SConscript
        </execute_after>
    </component>
    
</external_dependencies>
