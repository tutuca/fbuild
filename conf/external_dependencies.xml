<external_dependencies>
    <!-- Format of a component:
    
    <component
        name="ComponentName"
        type=["LIB" | "HLIB" | "PRO"]
        check="ComponentNameInTheSystem"
        deps="A,B,C"
        <installer
            distro=["UBUNTU" | "ARCH" | "*"]
            target=["PackageName" | "Url"]
            manager=["HG" | "SVN" | "WGET"] | 
                    ["APT-GET" | "APTITUDE" | "PACKER" | "PACMAN" | "*"] />
        <install_checker> ShellScript </install_checker>
        <execute_after> ShellScript </execute_after>
    </component>

    Explanation:
    
    <component>
    name   -  It's the name the component will have in fbuild, i.e., the name you
              will use in the SConscripts when you specify the component as a
              dependency.
                                                                         (Required)
    type   -  It's the type of the component. Three types of component are allow:
              > "LIB" for statics and dynamics libraries.
              > "HLIB" for header only libraries.
              > "PRO" for programs.
                                                                         (Required)
    check  -  It's the name fbuild will use to check if the component exists or
              not. It has different meaning depending on the component type.
              > If type="LIB", it is the name of library used when it is link,
                i.e. the name that goes in the -l option (-lcheck).
              > If type="HLIB", it is the include name of the main component of
                the library, i.e. the name used in the #include macro
                (#include<check>).
              > If type="PRO", it is the name of the executable file, i.e. the
                name you use when you call the program from the shell.
              If this value is not supplied fbuild assumes check=name.
                                                                         (Optional)
    deps   -  The list of the components from which this component depends.
              It's a comma separate string without empty paces.
                                                                         (Optional)
    <installer>
    distro  - 
    target  - 
    manager -

    IMPORTANT:
        Please maintain alphabetical order based on name to ease maintenance -->

    <component name="bison" type="PRO">
        <installer distro="*" target="bison" manager="*"/>
    </component>
    
    <component name="boost_thread" type="LIB">
        <installer distro="UBUNTU" target="libboost-thread-dev" manager="APT-GET"/>
        <installer distro="ARCH" target="boost" manager="PACKER"/>
    </component>
    
    <component name="boost_system" type="LIB">
        <installer distro="UBUNTU" target="libboost-system-dev" manager="APT-GET"/>
        <installer distro="ARCH" target="boost" manager="PACKER"/>
    </component>
    
    <component name="expat" type="LIB">
        <installer distro="UBUNTU" target="libexpat-dev" manager="APT-GET"/>
        <installer distro="ARCH" target="expat" manager="PACKER"/>
    </component>
    
    <component name="flex" type="PRO">
        <installer distro="*" target="flex" manager="*"/>
    </component>
    
    <component name="gmock" type="LIB" deps="gtest,pthread">
        <installer
            distro="*"
            target="https://googlemock.googlecode.com/svn/tags/release-1.6.0"
            manager="SVN"/>
        <execute_after>
            cd {TMP_DIR}/gmock/make; make CFLAGS={CFLAGS} CXXFLAGS={CXXFLAGS} gmock.a; make gmock_main.a
            sudo mv {TMP_DIR}/gmock/make/gmock.a /usr/lib/libgmock.a
            sudo mv {TMP_DIR}/gmock/make/gmock_main.a /usr/lib/libgmock_main.a
            sudo cp -r {TMP_DIR}/gmock/include/gmock /usr/include/gmock
        </execute_after>
    </component>
    
    <component name="gmock_main" type="LIB" deps="gmock"/>
    
    <component name="gtest" type="LIB" deps="pthread">
        <installer
            distro="*"
            target="https://googletest.googlecode.com/svn/tags/release-1.6.0"
            manager="SVN" />
        <execute_after>
            cd {TMP_DIR}/gtest/make; make gtest.a; make gtest_main.a
            sudo mv {TMP_DIR}/gtest/make/gtest.a /usr/lib/libgtest.a
            sudo mv {TMP_DIR}/gtest/make/gtest_main.a /usr/lib/libgtest_main.a
            sudo cp -r {TMP_DIR}/gtest/include/gtest /usr/include/gtest
        </execute_after>
    </component>
    
    <component name="gtest_main" type="LIB" deps="gtest"/>
    
    <component name="odeint" type="HLIB" check="boost/numeric/odeint.hpp"
               deps="boost_system,boost_thread">
        <installer
            distro="UBUNTU"
            target="http://github.com/headmyshoulder/odeint-v2/tarball/master"
            manager="WGET"/>
        <install_checker>stat -f /usr/include/boost/numeric/odeint.hpp</install_checker>
        <execute_after>
            cd ./{TMP_DIR}/odeint; tar zxvf master
            sudo cp -r ./{TMP_DIR}/odeint/headmyshoulder-odeint-v2-da114de/boost/numeric/* /usr/include/boost/numeric/
        </execute_after>
    </component>
    
    <component name="xdrfile" type="LIB">
        <installer
            distro="*"
            target="ftp://ftp.gromacs.org/pub/contrib/xdrfile-1.1.tar.gz"
            manager="WGET"/>
        <execute_after>
            cd ./{TMP_DIR}/xdrfile; tar zxvf xdrfile-1.1.tar.gz
            mv ./{TMP_DIR}/xdrfile/xdrfile-1.1b/* ./{TMP_DIR}/xdrfile/
            cd ./{TMP_DIR}/xdrfile; ./configure CFLAGS={CFLAGS} CXXFLAGS={CXXFLAGS} --bindir=/usr/bin --libdir=/usr/lib --includedir=/usr/include
            cd ./{TMP_DIR}/xdrfile; make; sudo make install
        </execute_after>
    </component>

</external_dependencies>
